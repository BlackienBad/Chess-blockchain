{
  "contractName": "ChessSolidity",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "faucet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/Blackie/blockchain-chess/src/Contracts/ChessSolidity.sol\":\"ChessSolidity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Blackie/blockchain-chess/src/Contracts/ChessSolidity.sol\":{\"keccak256\":\"0xf9969e48f9a360e985d5152fda0d4d4f50d1b9d511764babe40dc9cab15ee7b2\",\"urls\":[\"bzz-raw://14ca8ad73ef3662b844a0814cb2a7c7aeb51b5518c1ca4031ce21c17d389c433\",\"dweb:/ipfs/QmfU7M5531ddKqBDAq3LsqJbf65ugHVQ8Pt65vycbmrQ7x\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x21d8a5dd396bee41e4a039d150af08b66b6d09eef416daf8e5edf13ef219084e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://682f1e9c20780070df3c8b52bf3b48d2aa6debcdff5a924e212d78bbaedb945f\",\"dweb:/ipfs/QmXGhsAPeemtVQ8ip5CsParvX3sgpMm4Lq8EccS3YaTtwA\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c806370a082311161006457806370a08231146101e457806395d89b4114610221578063a457c2d71461024c578063a9059cbb14610289578063dd62ed3e146102c6578063de5f72fd14610303576100a7565b806306fdde03146100ac578063095ea7b3146100d757806318160ddd1461011457806323b872dd1461013f578063313ce5671461017c57806339509351146101a7575b600080fd5b3480156100b857600080fd5b506100c161030d565b6040516100ce9190610fed565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610dcb565b61039f565b60405161010b9190610fd2565b60405180910390f35b34801561012057600080fd5b506101296103bd565b60405161013691906110ef565b60405180910390f35b34801561014b57600080fd5b5061016660048036038101906101619190610d7c565b6103c7565b6040516101739190610fd2565b60405180910390f35b34801561018857600080fd5b506101916104c8565b60405161019e919061110a565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190610dcb565b6104d1565b6040516101db9190610fd2565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190610d17565b61057d565b60405161021891906110ef565b60405180910390f35b34801561022d57600080fd5b506102366105c5565b6040516102439190610fed565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190610dcb565b610657565b6040516102809190610fd2565b60405180910390f35b34801561029557600080fd5b506102b060048036038101906102ab9190610dcb565b61074b565b6040516102bd9190610fd2565b60405180910390f35b3480156102d257600080fd5b506102ed60048036038101906102e89190610d40565b610769565b6040516102fa91906110ef565b60405180910390f35b61030b6107f0565b005b60606003805461031c90611265565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611265565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b60006103b36103ac610881565b8484610889565b6001905092915050565b6000600254905090565b60006103d4848484610a54565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061041f610881565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561049f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104969061106f565b60405180910390fd5b6104bc856104ab610881565b85846104b79190611197565b610889565b60019150509392505050565b60006012905090565b60006105736104de610881565b8484600160006104ec610881565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461056e9190611141565b610889565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105d490611265565b80601f016020809104026020016040519081016040528092919081815260200182805461060090611265565b801561064d5780601f106106225761010080835404028352916020019161064d565b820191906000526020600020905b81548152906001019060200180831161063057829003601f168201915b5050505050905090565b60008060016000610666610881565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a906110cf565b60405180910390fd5b61074061072e610881565b85858461073b9190611197565b610889565b600191505092915050565b600061075f610758610881565b8484610a54565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360016040518363ffffffff1660e01b815260040161082c929190610fa9565b602060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087e9190610e07565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f0906110af565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610969576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109609061102f565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a4791906110ef565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ac4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abb9061108f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2b9061100f565b60405180910390fd5b610b3f838383610cd3565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc9061104f565b60405180910390fd5b8181610bd19190611197565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c619190611141565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cc591906110ef565b60405180910390a350505050565b505050565b600081359050610ce78161152f565b92915050565b600081519050610cfc81611546565b92915050565b600081359050610d118161155d565b92915050565b600060208284031215610d2957600080fd5b6000610d3784828501610cd8565b91505092915050565b60008060408385031215610d5357600080fd5b6000610d6185828601610cd8565b9250506020610d7285828601610cd8565b9150509250929050565b600080600060608486031215610d9157600080fd5b6000610d9f86828701610cd8565b9350506020610db086828701610cd8565b9250506040610dc186828701610d02565b9150509250925092565b60008060408385031215610dde57600080fd5b6000610dec85828601610cd8565b9250506020610dfd85828601610d02565b9150509250929050565b600060208284031215610e1957600080fd5b6000610e2784828501610ced565b91505092915050565b610e39816111cb565b82525050565b610e48816111dd565b82525050565b610e5781611220565b82525050565b6000610e6882611125565b610e728185611130565b9350610e82818560208601611232565b610e8b816112f5565b840191505092915050565b6000610ea3602383611130565b9150610eae82611306565b604082019050919050565b6000610ec6602283611130565b9150610ed182611355565b604082019050919050565b6000610ee9602683611130565b9150610ef4826113a4565b604082019050919050565b6000610f0c602883611130565b9150610f17826113f3565b604082019050919050565b6000610f2f602583611130565b9150610f3a82611442565b604082019050919050565b6000610f52602483611130565b9150610f5d82611491565b604082019050919050565b6000610f75602583611130565b9150610f80826114e0565b604082019050919050565b610f9481611209565b82525050565b610fa381611213565b82525050565b6000604082019050610fbe6000830185610e30565b610fcb6020830184610e4e565b9392505050565b6000602082019050610fe76000830184610e3f565b92915050565b600060208201905081810360008301526110078184610e5d565b905092915050565b6000602082019050818103600083015261102881610e96565b9050919050565b6000602082019050818103600083015261104881610eb9565b9050919050565b6000602082019050818103600083015261106881610edc565b9050919050565b6000602082019050818103600083015261108881610eff565b9050919050565b600060208201905081810360008301526110a881610f22565b9050919050565b600060208201905081810360008301526110c881610f45565b9050919050565b600060208201905081810360008301526110e881610f68565b9050919050565b60006020820190506111046000830184610f8b565b92915050565b600060208201905061111f6000830184610f9a565b92915050565b600081519050919050565b600082825260208201905092915050565b600061114c82611209565b915061115783611209565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561118c5761118b611297565b5b828201905092915050565b60006111a282611209565b91506111ad83611209565b9250828210156111c0576111bf611297565b5b828203905092915050565b60006111d6826111e9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061122b82611209565b9050919050565b60005b83811015611250578082015181840152602081019050611235565b8381111561125f576000848401525b50505050565b6000600282049050600182168061127d57607f821691505b60208210811415611291576112906112c6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b611538816111cb565b811461154357600080fd5b50565b61154f816111dd565b811461155a57600080fd5b50565b61156681611209565b811461157157600080fd5b5056fea26469706673582212209ba9601afc7f4589725693e83db512aecb56d4cd0a144a2be26d34489e58035864736f6c63430008030033",
  "immutableReferences": {},
  "sourceMap": "86:216:0:-:0;;;124:85;;;;;;;;;;1842:114:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1917:5;1909;:13;;;;;;;;;;;;:::i;:::-;;1942:7;1932;:17;;;;;;;;;;;;:::i;:::-;;1842:114;;172:29:0::1;186:4;193:7;172:5;;;:29;;:::i;:::-;86:216:::0;;7940:330:2;8042:1;8023:21;;:7;:21;;;;8015:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8091:49;8120:1;8124:7;8133:6;8091:20;;;:49;;:::i;:::-;8167:6;8151:12;;:22;;;;;;;:::i;:::-;;;;;;;;8205:6;8183:9;:18;8193:7;8183:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8247:7;8226:37;;8243:1;8226:37;;;8256:6;8226:37;;;;;;:::i;:::-;;;;;;;;7940:330;;:::o;10423:92::-;;;;:::o;86:216:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:366:5:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:118::-;466:24;484:5;466:24;:::i;:::-;461:3;454:37;444:53;;:::o;503:419::-;;707:2;696:9;692:18;684:26;;756:9;750:4;746:20;742:1;731:9;727:17;720:47;784:131;910:4;784:131;:::i;:::-;776:139;;674:248;;;:::o;928:222::-;;1059:2;1048:9;1044:18;1036:26;;1072:71;1140:1;1129:9;1125:17;1116:6;1072:71;:::i;:::-;1026:124;;;;:::o;1156:169::-;;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1252:73;;;;:::o;1331:305::-;;1390:20;1408:1;1390:20;:::i;:::-;1385:25;;1424:20;1442:1;1424:20;:::i;:::-;1419:25;;1578:1;1510:66;1506:74;1503:1;1500:81;1497:2;;;1584:18;;:::i;:::-;1497:2;1628:1;1625;1621:9;1614:16;;1375:261;;;;:::o;1642:77::-;;1708:5;1697:16;;1687:32;;;:::o;1725:320::-;;1806:1;1800:4;1796:12;1786:22;;1853:1;1847:4;1843:12;1874:18;1864:2;;1930:4;1922:6;1918:17;1908:27;;1864:2;1992;1984:6;1981:14;1961:18;1958:38;1955:2;;;2011:18;;:::i;:::-;1955:2;1776:269;;;;:::o;2051:180::-;2099:77;2096:1;2089:88;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2237:180;2285:77;2282:1;2275:88;2382:4;2379:1;2372:15;2406:4;2403:1;2396:15;2423:181;2563:33;2559:1;2551:6;2547:14;2540:57;2529:75;:::o;86:216:0:-;;;;;;;",
  "deployedSourceMap": "86:216:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4091:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3082:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4724:414;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2940:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5533:212;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3246:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2223:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6232:371;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3574:172;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3804:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:78:0;;;:::i;:::-;;2021:89:2;2066:13;2098:5;2091:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:89;:::o;4091:166::-;4174:4;4190:39;4199:12;:10;:12::i;:::-;4213:7;4222:6;4190:8;:39::i;:::-;4246:4;4239:11;;4091:166;;;;:::o;3082:106::-;3143:7;3169:12;;3162:19;;3082:106;:::o;4724:414::-;4830:4;4846:36;4856:6;4864:9;4875:6;4846:9;:36::i;:::-;4893:24;4920:11;:19;4932:6;4920:19;;;;;;;;;;;;;;;:33;4940:12;:10;:12::i;:::-;4920:33;;;;;;;;;;;;;;;;4893:60;;4991:6;4971:16;:26;;4963:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5052:57;5061:6;5069:12;:10;:12::i;:::-;5102:6;5083:16;:25;;;;:::i;:::-;5052:8;:57::i;:::-;5127:4;5120:11;;;4724:414;;;;;:::o;2940:82::-;2989:5;3013:2;3006:9;;2940:82;:::o;5533:212::-;5621:4;5637:80;5646:12;:10;:12::i;:::-;5660:7;5706:10;5669:11;:25;5681:12;:10;:12::i;:::-;5669:25;;;;;;;;;;;;;;;:34;5695:7;5669:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5637:8;:80::i;:::-;5734:4;5727:11;;5533:212;;;;:::o;3246:125::-;3320:7;3346:9;:18;3356:7;3346:18;;;;;;;;;;;;;;;;3339:25;;3246:125;;;:::o;2223:93::-;2270:13;2302:7;2295:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:93;:::o;6232:371::-;6325:4;6341:24;6368:11;:25;6380:12;:10;:12::i;:::-;6368:25;;;;;;;;;;;;;;;:34;6394:7;6368:34;;;;;;;;;;;;;;;;6341:61;;6440:15;6420:16;:35;;6412:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6507:67;6516:12;:10;:12::i;:::-;6530:7;6558:15;6539:16;:34;;;;:::i;:::-;6507:8;:67::i;:::-;6592:4;6585:11;;;6232:371;;;;:::o;3574:172::-;3660:4;3676:42;3686:12;:10;:12::i;:::-;3700:9;3711:6;3676:9;:42::i;:::-;3735:4;3728:11;;3574:172;;;;:::o;3804:149::-;3893:7;3919:11;:18;3931:5;3919:18;;;;;;;;;;;;;;;:27;3938:7;3919:27;;;;;;;;;;;;;;;;3912:34;;3804:149;;;;:::o;221:78:0:-;264:4;:13;;;278:10;289:1;264:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;221:78::o;586:96:4:-;639:7;665:10;658:17;;586:96;:::o;9496:340:2:-;9614:1;9597:19;;:5;:19;;;;9589:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9694:1;9675:21;;:7;:21;;;;9667:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9776:6;9746:11;:18;9758:5;9746:18;;;;;;;;;;;;;;;:27;9765:7;9746:27;;;;;;;;;;;;;;;:36;;;;9813:7;9797:32;;9806:5;9797:32;;;9822:6;9797:32;;;;;;:::i;:::-;;;;;;;;9496:340;;;:::o;7077:592::-;7200:1;7182:20;;:6;:20;;;;7174:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7283:1;7262:23;;:9;:23;;;;7254:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7336:47;7357:6;7365:9;7376:6;7336:20;:47::i;:::-;7394:21;7418:9;:17;7428:6;7418:17;;;;;;;;;;;;;;;;7394:41;;7470:6;7453:13;:23;;7445:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7565:6;7549:13;:22;;;;:::i;:::-;7529:9;:17;7539:6;7529:17;;;;;;;;;;;;;;;:42;;;;7605:6;7581:9;:20;7591:9;7581:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7644:9;7627:35;;7636:6;7627:35;;;7655:6;7627:35;;;;;;:::i;:::-;;;;;;;;7077:592;;;;:::o;10423:92::-;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:407::-;;;833:2;821:9;812:7;808:23;804:32;801:2;;;849:1;846;839:12;801:2;892:1;917:53;962:7;953:6;942:9;938:22;917:53;:::i;:::-;907:63;;863:117;1019:2;1045:53;1090:7;1081:6;1070:9;1066:22;1045:53;:::i;:::-;1035:63;;990:118;791:324;;;;;:::o;1121:552::-;;;;1263:2;1251:9;1242:7;1238:23;1234:32;1231:2;;;1279:1;1276;1269:12;1231:2;1322:1;1347:53;1392:7;1383:6;1372:9;1368:22;1347:53;:::i;:::-;1337:63;;1293:117;1449:2;1475:53;1520:7;1511:6;1500:9;1496:22;1475:53;:::i;:::-;1465:63;;1420:118;1577:2;1603:53;1648:7;1639:6;1628:9;1624:22;1603:53;:::i;:::-;1593:63;;1548:118;1221:452;;;;;:::o;1679:407::-;;;1804:2;1792:9;1783:7;1779:23;1775:32;1772:2;;;1820:1;1817;1810:12;1772:2;1863:1;1888:53;1933:7;1924:6;1913:9;1909:22;1888:53;:::i;:::-;1878:63;;1834:117;1990:2;2016:53;2061:7;2052:6;2041:9;2037:22;2016:53;:::i;:::-;2006:63;;1961:118;1762:324;;;;;:::o;2092:278::-;;2208:2;2196:9;2187:7;2183:23;2179:32;2176:2;;;2224:1;2221;2214:12;2176:2;2267:1;2292:61;2345:7;2336:6;2325:9;2321:22;2292:61;:::i;:::-;2282:71;;2238:125;2166:204;;;;:::o;2376:118::-;2463:24;2481:5;2463:24;:::i;:::-;2458:3;2451:37;2441:53;;:::o;2500:109::-;2581:21;2596:5;2581:21;:::i;:::-;2576:3;2569:34;2559:50;;:::o;2615:147::-;2710:45;2749:5;2710:45;:::i;:::-;2705:3;2698:58;2688:74;;:::o;2768:364::-;;2884:39;2917:5;2884:39;:::i;:::-;2939:71;3003:6;2998:3;2939:71;:::i;:::-;2932:78;;3019:52;3064:6;3059:3;3052:4;3045:5;3041:16;3019:52;:::i;:::-;3096:29;3118:6;3096:29;:::i;:::-;3091:3;3087:39;3080:46;;2860:272;;;;;:::o;3138:366::-;;3301:67;3365:2;3360:3;3301:67;:::i;:::-;3294:74;;3377:93;3466:3;3377:93;:::i;:::-;3495:2;3490:3;3486:12;3479:19;;3284:220;;;:::o;3510:366::-;;3673:67;3737:2;3732:3;3673:67;:::i;:::-;3666:74;;3749:93;3838:3;3749:93;:::i;:::-;3867:2;3862:3;3858:12;3851:19;;3656:220;;;:::o;3882:366::-;;4045:67;4109:2;4104:3;4045:67;:::i;:::-;4038:74;;4121:93;4210:3;4121:93;:::i;:::-;4239:2;4234:3;4230:12;4223:19;;4028:220;;;:::o;4254:366::-;;4417:67;4481:2;4476:3;4417:67;:::i;:::-;4410:74;;4493:93;4582:3;4493:93;:::i;:::-;4611:2;4606:3;4602:12;4595:19;;4400:220;;;:::o;4626:366::-;;4789:67;4853:2;4848:3;4789:67;:::i;:::-;4782:74;;4865:93;4954:3;4865:93;:::i;:::-;4983:2;4978:3;4974:12;4967:19;;4772:220;;;:::o;4998:366::-;;5161:67;5225:2;5220:3;5161:67;:::i;:::-;5154:74;;5237:93;5326:3;5237:93;:::i;:::-;5355:2;5350:3;5346:12;5339:19;;5144:220;;;:::o;5370:366::-;;5533:67;5597:2;5592:3;5533:67;:::i;:::-;5526:74;;5609:93;5698:3;5609:93;:::i;:::-;5727:2;5722:3;5718:12;5711:19;;5516:220;;;:::o;5742:118::-;5829:24;5847:5;5829:24;:::i;:::-;5824:3;5817:37;5807:53;;:::o;5866:112::-;5949:22;5965:5;5949:22;:::i;:::-;5944:3;5937:35;5927:51;;:::o;5984:348::-;;6151:2;6140:9;6136:18;6128:26;;6164:71;6232:1;6221:9;6217:17;6208:6;6164:71;:::i;:::-;6245:80;6321:2;6310:9;6306:18;6297:6;6245:80;:::i;:::-;6118:214;;;;;:::o;6338:210::-;;6463:2;6452:9;6448:18;6440:26;;6476:65;6538:1;6527:9;6523:17;6514:6;6476:65;:::i;:::-;6430:118;;;;:::o;6554:313::-;;6705:2;6694:9;6690:18;6682:26;;6754:9;6748:4;6744:20;6740:1;6729:9;6725:17;6718:47;6782:78;6855:4;6846:6;6782:78;:::i;:::-;6774:86;;6672:195;;;;:::o;6873:419::-;;7077:2;7066:9;7062:18;7054:26;;7126:9;7120:4;7116:20;7112:1;7101:9;7097:17;7090:47;7154:131;7280:4;7154:131;:::i;:::-;7146:139;;7044:248;;;:::o;7298:419::-;;7502:2;7491:9;7487:18;7479:26;;7551:9;7545:4;7541:20;7537:1;7526:9;7522:17;7515:47;7579:131;7705:4;7579:131;:::i;:::-;7571:139;;7469:248;;;:::o;7723:419::-;;7927:2;7916:9;7912:18;7904:26;;7976:9;7970:4;7966:20;7962:1;7951:9;7947:17;7940:47;8004:131;8130:4;8004:131;:::i;:::-;7996:139;;7894:248;;;:::o;8148:419::-;;8352:2;8341:9;8337:18;8329:26;;8401:9;8395:4;8391:20;8387:1;8376:9;8372:17;8365:47;8429:131;8555:4;8429:131;:::i;:::-;8421:139;;8319:248;;;:::o;8573:419::-;;8777:2;8766:9;8762:18;8754:26;;8826:9;8820:4;8816:20;8812:1;8801:9;8797:17;8790:47;8854:131;8980:4;8854:131;:::i;:::-;8846:139;;8744:248;;;:::o;8998:419::-;;9202:2;9191:9;9187:18;9179:26;;9251:9;9245:4;9241:20;9237:1;9226:9;9222:17;9215:47;9279:131;9405:4;9279:131;:::i;:::-;9271:139;;9169:248;;;:::o;9423:419::-;;9627:2;9616:9;9612:18;9604:26;;9676:9;9670:4;9666:20;9662:1;9651:9;9647:17;9640:47;9704:131;9830:4;9704:131;:::i;:::-;9696:139;;9594:248;;;:::o;9848:222::-;;9979:2;9968:9;9964:18;9956:26;;9992:71;10060:1;10049:9;10045:17;10036:6;9992:71;:::i;:::-;9946:124;;;;:::o;10076:214::-;;10203:2;10192:9;10188:18;10180:26;;10216:67;10280:1;10269:9;10265:17;10256:6;10216:67;:::i;:::-;10170:120;;;;:::o;10296:99::-;;10382:5;10376:12;10366:22;;10355:40;;;:::o;10401:169::-;;10519:6;10514:3;10507:19;10559:4;10554:3;10550:14;10535:29;;10497:73;;;;:::o;10576:305::-;;10635:20;10653:1;10635:20;:::i;:::-;10630:25;;10669:20;10687:1;10669:20;:::i;:::-;10664:25;;10823:1;10755:66;10751:74;10748:1;10745:81;10742:2;;;10829:18;;:::i;:::-;10742:2;10873:1;10870;10866:9;10859:16;;10620:261;;;;:::o;10887:191::-;;10947:20;10965:1;10947:20;:::i;:::-;10942:25;;10981:20;10999:1;10981:20;:::i;:::-;10976:25;;11020:1;11017;11014:8;11011:2;;;11025:18;;:::i;:::-;11011:2;11070:1;11067;11063:9;11055:17;;10932:146;;;;:::o;11084:96::-;;11150:24;11168:5;11150:24;:::i;:::-;11139:35;;11129:51;;;:::o;11186:90::-;;11263:5;11256:13;11249:21;11238:32;;11228:48;;;:::o;11282:126::-;;11359:42;11352:5;11348:54;11337:65;;11327:81;;;:::o;11414:77::-;;11480:5;11469:16;;11459:32;;;:::o;11497:86::-;;11572:4;11565:5;11561:16;11550:27;;11540:43;;;:::o;11589:121::-;;11680:24;11698:5;11680:24;:::i;:::-;11667:37;;11657:53;;;:::o;11716:307::-;11784:1;11794:113;11808:6;11805:1;11802:13;11794:113;;;11893:1;11888:3;11884:11;11878:18;11874:1;11869:3;11865:11;11858:39;11830:2;11827:1;11823:10;11818:15;;11794:113;;;11925:6;11922:1;11919:13;11916:2;;;12005:1;11996:6;11991:3;11987:16;11980:27;11916:2;11765:258;;;;:::o;12029:320::-;;12110:1;12104:4;12100:12;12090:22;;12157:1;12151:4;12147:12;12178:18;12168:2;;12234:4;12226:6;12222:17;12212:27;;12168:2;12296;12288:6;12285:14;12265:18;12262:38;12259:2;;;12315:18;;:::i;:::-;12259:2;12080:269;;;;:::o;12355:180::-;12403:77;12400:1;12393:88;12500:4;12497:1;12490:15;12524:4;12521:1;12514:15;12541:180;12589:77;12586:1;12579:88;12686:4;12683:1;12676:15;12710:4;12707:1;12700:15;12727:102;;12819:2;12815:7;12810:2;12803:5;12799:14;12795:28;12785:38;;12775:54;;;:::o;12835:222::-;12975:34;12971:1;12963:6;12959:14;12952:58;13044:5;13039:2;13031:6;13027:15;13020:30;12941:116;:::o;13063:221::-;13203:34;13199:1;13191:6;13187:14;13180:58;13272:4;13267:2;13259:6;13255:15;13248:29;13169:115;:::o;13290:225::-;13430:34;13426:1;13418:6;13414:14;13407:58;13499:8;13494:2;13486:6;13482:15;13475:33;13396:119;:::o;13521:227::-;13661:34;13657:1;13649:6;13645:14;13638:58;13730:10;13725:2;13717:6;13713:15;13706:35;13627:121;:::o;13754:224::-;13894:34;13890:1;13882:6;13878:14;13871:58;13963:7;13958:2;13950:6;13946:15;13939:32;13860:118;:::o;13984:223::-;14124:34;14120:1;14112:6;14108:14;14101:58;14193:6;14188:2;14180:6;14176:15;14169:31;14090:117;:::o;14213:224::-;14353:34;14349:1;14341:6;14337:14;14330:58;14422:7;14417:2;14409:6;14405:15;14398:32;14319:118;:::o;14443:122::-;14516:24;14534:5;14516:24;:::i;:::-;14509:5;14506:35;14496:2;;14555:1;14552;14545:12;14496:2;14486:79;:::o;14571:116::-;14641:21;14656:5;14641:21;:::i;:::-;14634:5;14631:32;14621:2;;14677:1;14674;14667:12;14621:2;14611:76;:::o;14693:122::-;14766:24;14784:5;14766:24;:::i;:::-;14759:5;14756:35;14746:2;;14805:1;14802;14795:12;14746:2;14736:79;:::o",
  "source": "pragma solidity ^0.8.2;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ncontract ChessSolidity is ERC20{\r\n    constructor () ERC20(\"Token\", \"TKN\") {\r\n        _mint(address(this), 1000000);\r\n    }\r\n    \r\n    function faucet() public payable{\r\n        this.transfer(msg.sender,1);\r\n    }\r\n}",
  "sourcePath": "C:/Users/Blackie/blockchain-chess/src/Contracts/ChessSolidity.sol",
  "ast": {
    "absolutePath": "/C/Users/Blackie/blockchain-chess/src/Contracts/ChessSolidity.sol",
    "exportedSymbols": {
      "ChessSolidity": [
        33
      ],
      "Context": [
        693
      ],
      "ERC20": [
        592
      ],
      "IERC20": [
        670
      ]
    },
    "id": 34,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 34,
        "sourceUnit": 593,
        "src": "27:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 592,
              "src": "112:5:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "112:5:0"
          }
        ],
        "contractDependencies": [
          592,
          670,
          693
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33,
          592,
          670,
          693
        ],
        "name": "ChessSolidity",
        "nameLocation": "95:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "161:48:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "186:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChessSolidity_$33",
                              "typeString": "contract ChessSolidity"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChessSolidity_$33",
                              "typeString": "contract ChessSolidity"
                            }
                          ],
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "178:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "178:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "178:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "193:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 11,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "172:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "172:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "172:29:0"
                }
              ]
            },
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "145:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                      "typeString": "literal_string \"Token\""
                    },
                    "value": "Token"
                  },
                  {
                    "hexValue": "544b4e",
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "154:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                      "typeString": "literal_string \"TKN\""
                    },
                    "value": "TKN"
                  }
                ],
                "id": 9,
                "modifierName": {
                  "id": 6,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 592,
                  "src": "139:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "139:21:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "136:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:0"
            },
            "scope": 33,
            "src": "124:85:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "253:46:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "278:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "278:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "289:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 23,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "264:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessSolidity_$33",
                          "typeString": "contract ChessSolidity"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 205,
                      "src": "264:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "264:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "264:27:0"
                }
              ]
            },
            "functionSelector": "de5f72fd",
            "id": 32,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nameLocation": "230:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:0:0"
            },
            "scope": 33,
            "src": "221:78:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "86:216:0"
      }
    ],
    "src": "0:302:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Blackie/blockchain-chess/src/Contracts/ChessSolidity.sol",
    "exportedSymbols": {
      "ChessSolidity": [
        33
      ],
      "Context": [
        693
      ],
      "ERC20": [
        592
      ],
      "IERC20": [
        670
      ]
    },
    "id": 34,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 34,
        "sourceUnit": 593,
        "src": "27:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 592,
              "src": "112:5:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "112:5:0"
          }
        ],
        "contractDependencies": [
          592,
          670,
          693
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33,
          592,
          670,
          693
        ],
        "name": "ChessSolidity",
        "nameLocation": "95:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "161:48:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 14,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "186:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ChessSolidity_$33",
                              "typeString": "contract ChessSolidity"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ChessSolidity_$33",
                              "typeString": "contract ChessSolidity"
                            }
                          ],
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "178:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "178:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "178:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030",
                        "id": 16,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "193:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        }
                      ],
                      "id": 11,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "172:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "172:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "172:29:0"
                }
              ]
            },
            "id": 20,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "145:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                      "typeString": "literal_string \"Token\""
                    },
                    "value": "Token"
                  },
                  {
                    "hexValue": "544b4e",
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "154:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
                      "typeString": "literal_string \"TKN\""
                    },
                    "value": "TKN"
                  }
                ],
                "id": 9,
                "modifierName": {
                  "id": 6,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 592,
                  "src": "139:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "139:21:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "136:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:0:0"
            },
            "scope": 33,
            "src": "124:85:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "253:46:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "278:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "278:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "289:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 23,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "264:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChessSolidity_$33",
                          "typeString": "contract ChessSolidity"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 205,
                      "src": "264:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "264:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "264:27:0"
                }
              ]
            },
            "functionSelector": "de5f72fd",
            "id": 32,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "faucet",
            "nameLocation": "230:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "236:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "253:0:0"
            },
            "scope": 33,
            "src": "221:78:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "86:216:0"
      }
    ],
    "src": "0:302:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address",
              "internalType": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256",
              "internalType": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD5868b86F494c0887bcD8D38FAfDc53f38791737",
      "transactionHash": "0xe6d67516264266decaf7500ee6834ff2060e10e4a8f564f59d3aa2d92ea9bc51"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-03-25T21:09:41.657Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overloaded; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}